version: '3.8'

services:
  flask-backend:
    container_name: "RockIt Backend"
    build:
      context: .
      dockerfile: Dockerfile.backend
    # ports:
      # - "<Port to access RockIt backend routes (optional)>:8000"
    networks:
      - app-network
    environment:
      ENVIRONMENT: "PROD"
      CLIENT_ID: "<CLIENT_ID for Spotify API>"
      CLIENT_SECRET: "<CLIENT_SECRET for Spotify API>"
      FRONTEND_URL: "http://astro-frontend:4321"
      SONGS_PATH: "/songs"
      TEMP_PATH: "/temp"
      LOGS_PATH: "/logs"
      IMAGES_PATH: "/images"
      API_KEY: "qlLH16dEklu7GbkFLO0eAbTiuxe1fqMLGYzhZqTxtw1hdJGEjx4DYd0ASTSM7544"
    volumes:
      - <path to songs dir>:/songs
      - <path to temp dir>:/temp
      - <path to logs dir>:/logs
      - <path to images dir>:/images
  astro-frontend:
    container_name: "RockIt Frontend"
    build:
      context: .
    ports:
      - "<Port to access RockIt>:4321"
    networks:
      - app-network
    environment:
      BACKEND_URL: "http://flask-backend:8000"
      SONGS_PATH: "/app/songs"
      IMAGES_PATH: "/app/images"
      INSECURE_DB_MODE: "true"
      API_KEY: "qlLH16dEklu7GbkFLO0eAbTiuxe1fqMLGYzhZqTxtw1hdJGEjx4DYd0ASTSM7544"
    volumes:
      - <path to database dir>:/app/database
      - <path to songs dir>:/app/songs
      - <path to images dir>:/app/images

networks:
  app-network:
    driver: bridge
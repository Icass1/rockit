---
import Layout from "@/layouts/Layout.astro";
import { ChartLine, ImageUp, LogOut } from "lucide-react";
import DownloadAppButton from "@/components/DownloadAppButton.tsx";
import ServiceWorkerInfo from "@/components/ServiceWorkerInfo.tsx";
import ChangeLang from "@/components/Settings/ChangeLang";

import { getLang } from "@/lib/getLang";
import LogOutButton from "@/components/Settings/LogOutButton";
import CrossFadeInput from "@/components/Settings/CrossFadeInput";

if (!Astro.locals.user) {
    return Astro.redirect("/login");
}

// Datos ficticios del usuario
const user = {
    profilePicture: "/user-placeholder.png", // Placeholder para la imagen de perfil
    displayName: Astro.locals.user.username,
    username: Astro.locals.user.username,
};

const lang = getLang(Astro.locals.user.lang);
---

<Layout title="Settings • Rock It!" currentPage="Settings">
    <section
        class="h-fit md:h-full flex items-center justify-center mt-10 px-3 md:px-0 md:mt-0"
    >
        <div
            class="flex flex-col md:flex-row gap-8 md:gap-16 items-center md:items-start w-full px-4 md:px-0"
        >
            {/* Columna izquierda */}
            <div
                class="md:w-1/3 w-full md:h-[70vh] border-b md:border-b-0 md:border-r border-gray-700 pb-8 md:pb-0 mt-10 md:mt-0 flex flex-col items-center justify-center"
            >
                <div class="relative group flex justify-center items-center">
                    {/* Imagen de perfil */}
                    <img
                        src={user.profilePicture}
                        alt="User Profile Picture"
                        class="h-48 md:h-72 bg-neutral-400 rounded-full object-cover shadow-md transition duration-300"
                    />
                    {
                        /* Overlay con ícono al hacer hover - CUANDO HAYA IMAGEN HAY QUE OCULTAR EL ICONO*/
                    }
                    <div
                        class="absolute inset-0 bg-black/20 md:h-full aspect-square flex items-center justify-center rounded-full md:opacity-0 md:group-hover:opacity-100 transition duration-300 cursor-pointer"
                    >
                        <ImageUp
                            className="text-white w-16 h-16 md:w-24 md:h-24"
                        />
                    </div>
                </div>
                {/* Display name */}
                <h2 class="text-xl md:text-3xl font-bold text-white mt-4">
                    {user.displayName}
                </h2>
                {/* Username */}
                <p class="text-base md:text-lg text-gray-500">
                    @{user.username}
                </p>

                <div
                    class="flex flex-wrap items-center justify-center gap-2 mt-2"
                >
                    {/* Botón de log out */}
                    <LogOutButton client:only="react" />

                    {/* Botón de estadísticas */}
                    <a
                        class="w-40 py-2 bg-blue-700 md:hidden text-white rounded-lg font-bold shadow-md hover:bg-blue-900 transition duration-300 flex items-center justify-center gap-2"
                        href="/stats"
                    >
                        <ChartLine className="w-5 h-5" />
                        See User Stats
                    </a>
                </div>
            </div>

            {/* Columna derecha */}
            <div
                class="md:w-2/3 md:pr-[30%] md:pl-1 w-full flex flex-col md:gap-y-6 gap-y-4 h-[70vh] md:overflow-y-auto"
            >
                <h2
                    class="text-xl md:text-2xl font-bold text-white sticky top-0 text-center z-10 py-2 bg-gradient-to-b from-[rgb(11,11,11)] to-transparent"
                >
                    {lang.user_settings}
                </h2>
                {/* Cambiar nombre de usuario */}
                <div>
                    <label class="block text-gray-300 text-sm md:text-lg mb-2">
                        {lang.display_name}
                    </label>
                    <input
                        type="text"
                        class="w-full p-3 rounded-lg bg-[#1e1e1e] text-white border border-[#333] focus:outline-none focus:ring-2 focus:ring-[#ec5588]"
                        value={user.displayName}
                    />
                </div>

                {/* Cambiar idioma */}
                <ChangeLang client:only="react" />

                {/* Cambiar nombre de usuario */}

                {/* Cambiar contraseña */}
                <div>
                    <label class="block text-gray-300 text-sm md:text-lg mb-2">
                        {lang.change_password}
                    </label>
                    <input
                        type="password"
                        placeholder={lang.new_password}
                        class="w-full p-3 rounded-lg bg-[#1e1e1e] text-white border border-[#333] focus:outline-none focus:ring-2 focus:ring-[#ec5588]"
                    />
                </div>
                <div>
                    <label class="block text-gray-300 text-sm md:text-lg mb-2">
                        {lang.repeat_password}
                    </label>
                    <input
                        type="password"
                        placeholder={lang.repeat_password}
                        class="w-full p-3 rounded-lg bg-[#1e1e1e] text-white border border-[#333] focus:outline-none focus:ring-2 focus:ring-[#ec5588]"
                    />
                </div>

                <div>
                    <h2 class="text-xl md:text-2xl font-bold text-white mb-2">
                        Cross Fade
                    </h2>
                    <CrossFadeInput client:only="react" />

                    <!-- <input
                        id="cross-fade-input"
                        type="number"
                        value="0"
                        max="40"
                        min="0"
                        class="p-2 w-16 rounded"
                        oninput="localStorage.setItem('crossFade', this.value)"
                    /> -->
                </div>
                <!-- <script>
                    // Temporary solution, a react component should be created to update value in database, not in localStorage

                    const $crossFadeInput = document.getElementById(
                        "cross-fade-input"
                    ) as HTMLInputElement;
                    console.log("ASDF", $crossFadeInput)
                    if ($crossFadeInput) {
                        $crossFadeInput.value =
                            localStorage.getItem("crossFade") ?? "0";
                    }
                    document.addEventListener("DOMContentLoaded", () => {
                        const $crossFadeInput = document.getElementById(
                            "cross-fade-input"
                        ) as HTMLInputElement;
                        $crossFadeInput.value =
                            localStorage.getItem("crossFade") ?? "0";
                    });
                </script> -->
                <DownloadAppButton client:only="react" />
                <ServiceWorkerInfo client:only="react" />
                <div class="min-h-16 block"></div>
            </div>
        </div>
    </section>
</Layout>

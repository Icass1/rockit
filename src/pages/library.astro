---
import Layout from "@/layouts/Layout.astro";
import {
    db,
    parseAlbum,
    parsePlaylist,
    parseUser,
    type AlbumDB,
    type PlaylistDB,
    type RawAlbumDB,
    type RawPlaylistDB,
    type RawUserDB,
} from "@/lib/db";

if (!Astro.locals.user) {
    return Astro.redirect("/login");
}

const userLists = parseUser(
    db
        .prepare("SELECT lists FROM user WHERE id = ?")
        .get(Astro.locals.user.id) as RawUserDB
)?.lists;

if (!userLists) {
    return new Response("Fatal error, userLists is undefined");
}

let playlists: PlaylistDB[] = [];
let albums: AlbumDB[] = [];
if (userLists?.filter((list) => list.type == "playlist").length > 0) {
    const playlistsQuery = `SELECT * FROM playlist WHERE id = ${userLists
        ?.filter((list) => list.type == "playlist")
        .map((list) => `'${list.id}'`)
        .join(" OR id = ")}`;
    playlists = (db.prepare(playlistsQuery).all() as RawPlaylistDB[]).map(
        (playlist: RawPlaylistDB) => parsePlaylist(playlist) as PlaylistDB
    );
}
if (userLists?.filter((list) => list.type == "album").length > 0) {
    const albumsQuery = `SELECT * FROM album WHERE id = ${userLists
        ?.filter((list) => list.type == "album")
        .map((list) => `'${list.id}'`)
        .join(" OR id = ")}`;
    albums = (db.prepare(albumsQuery).all() as RawAlbumDB[]).map(
        (album) => parseAlbum(album) as AlbumDB
    );
}
---

<Layout title="Rock It!" currentPage="Library">
    <div class="p-8 h-full">
        <label class="text-white text-4xl font-bold block"> Library </label>
        <input
            class="absolute font-semibold bg-neutral-900 shadow mx-auto rounded-full block text-1xl px-10 w-1/10 h-8 -translate-y-12 focus:outline-0 right-5"
            style={{
                backgroundImage: "url(/search-icon.png)",
                backgroundPosition: "15px center",
                backgroundSize: "14px",
                backgroundRepeat: "no-repeat",
            }}
            placeholder="Search in Library"
        />

        <section class="py-12 text-white">
            <h2 class="text-2xl font-bold text-left">Featured Albums</h2>
            <div class="relative flex items-center gap-5 overflow-x-auto py-4 px-2">
                <!-- AquÃ­ creamos las canciones -->
                {
                    Array.from({ length: 3 }).map((_, index) => (
                        <a href="#" class="flex-none w-48 hover:scale-105 transition">
                            <img
                                class="rounded-lg w-full aspect-square object-cover"
                                src="/song-placeholder.png"
                                alt="Song Cover"
                            />
                            <label class="truncate font-semibold text-center block mt-2">
                                Album/Playlist {index + 1}
                            </label>
                            <label class="truncate text-sm text-center text-gray-400 block">
                                ShortDescription
                            </label>
                        </a>
                    ))
                }
            </div>
        </section>

        <div
            class="grid gap-5"
            style="grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));"
        >
            {
                playlists.map((playlist) => {
                    if (!playlist) return <label>Playlist is undefined</label>;
                    return (
                        <a
                            href={`/playlist/${playlist.id}`}
                            class="w-fit h-fit flex flex-col min-w-0 max-w-full hover:scale-110 transition-transform"
                        >
                            <img
                                class="rounded-md"
                                src={
                                    playlist.image
                                        ? `/api/image/${playlist.image}`
                                        : playlist.images[0]?.url
                                }
                            />
                            <label class="truncate font-semibold text-center">
                                {playlist.name}
                            </label>
                            <label class="truncate text-sm text-center text-gray-400">
                                {playlist.owner}
                            </label>
                        </a>
                    );
                })
            }

            {
                albums.map((album) => {
                    if (!album) return <label>Playlist is undefined</label>;
                    return (
                        <a
                            href={`/album/${album.id}`}
                            class="w-fit h-fit flex flex-col min-w-0 max-w-full hover:scale-105 transition-transform"
                        >
                            <img
                                class="rounded-md"
                                src={
                                    album.image
                                        ? `/api/image/${album.image}`
                                        : album.images[0]?.url
                                }
                            />
                            <label class="truncate font-semibold text-center mt-1">
                                {album.name}
                            </label>
                            <div class=" font-semibold text-sm text-center flex flex-row text-gray-400 mx-auto">
                                {album.artists.map((artist, index) => (
                                    <label
                                        class="hover:underline"
                                        onclick={`event.preventDefault(); event.stopPropagation(); location.href='/artist/${artist.id}' `}
                                    >
                                        {`${artist.name}${index < album.artists.length - 1 ? "," : ""}`}
                                    </label>
                                ))}
                            </div>
                        </a>
                    );
                })
            }
        </div>
        <div class="min-h-10"></div>
    </div>
</Layout>

---
import "@/styles/default.css";
import Header from "@/components/Header/Header.astro";
import Navigation from "@/components/Navigation.tsx";
import Footer from "@/components/Footer/Footer.astro";
import LoadingIndicator from "@/components/LoadingIndicator.astro";

import { ViewTransitions } from "astro:transitions";
import PlayerUI from "@/components/PlayerUI/PlayerUI";
import MobilePlayerUI from "@/components/Mobile/MobilePlayerUI.tsx";
import FooterMobile from "@/components/Footer/FooterMobile";

export interface Props {
    currentPage: string;
    title?: string;
    meta?: { [key: string]: string };
    bgImage?: string;
}

const { currentPage } = Astro.props;
const { title } = Astro.props;
const { meta } = Astro.props;
const { bgImage } = Astro.props;
---

<!doctype html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta
            name="description"
            content="Rock It! - A music player by Icass & Nicorebo18"
        />
        <meta
            name="viewport"
            content="width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no, interactive-widget=resizes-content"
        />
        <meta name="generator" content={Astro.generator} />

        <!--Fullscreen de Apple-->
        <meta name="apple-mobile-web-app-capable" content="yes" />
        <meta name="mobile-web-app-capable" content="yes" />
        <meta name="theme-color" content="#000" />
        <!-- #0b0b0b0 -->

        {
            meta &&
                Object.entries(meta).map((metaItem) => (
                    <>
                        <meta name={metaItem[0]} content={metaItem[1]} />
                        <meta property={metaItem[0]} content={metaItem[1]} />
                    </>
                ))
        }

        <link rel="icon" type="image/svg+xml" href="/rockit-logo.ico" />
        <link rel="manifest" href="/manifest.json" />
        <title>{title || "RockIt"}</title>
        <ViewTransitions />
    </head>
    <body>
        <main
            class="relative grid grid-rows-[1fr_min-content] md:grid-rows-[min-content_1fr_min-content] md:grid-cols-[min-content_1fr] max-w-full min-w-0 w-full"
        >
            {
                bgImage && (
                    <img
                        src={bgImage}
                        class="absolute top-0 left-0 w-full h-full object-cover opacity-35"
                    />
                )
            }

            <div
                style={{ gridArea: "header" }}
                class="min-w-0 max-w-full w-full z-40 hidden md:block"
            >
                <Header />
            </div>
            <div style={{ gridArea: "nav" }} class="z-50">
                <Navigation
                    activePage={currentPage}
                    admin={Astro.locals.user?.admin}
                    client:only="react"
                    transition:persist
                    server:defer
                >
                    <!-- Temporary div while loading Navigation -->
                    <div
                        slot="fallback"
                        class="min-h-0 max-h-full h-full bg-black w-12"
                    >
                    </div>
                </Navigation>
            </div>

            <!-- Main content -->
            <div class="hidden md:block">
                <PlayerUI client:only="react" />
            </div>
            <div class="block md:hidden">
                <MobilePlayerUI client:only="react" />
            </div>

            <div
                class="md:hidden block absolute w-full h-fit bg-gradient-to-b from-black to-black/0 z-40 items-center justify-center mx-auto"
            >
                <a href="/" class="text-white text-2xl font-bold">
                    <img
                        src="/logo-banner.png"
                        alt="App Logo"
                        class="mx-auto h-14 object-contain my-2"
                    />
                </a>
            </div>

            <div
                class="block min-w-0 max-w-full w-full min-h-0 max-h-full overflow-hidden relative"
                style={{ gridArea: "main" }}
            >
                <div
                    class="overflow-y-auto overflow-x-hidden md:overflow-hidden md:hover:overflow-auto w-full h-full absolute md:[scrollbar-gutter:stable]"
                >
                    <slot />
                </div>
            </div>

            <!-- Footer -->
            <div
                class="hidden md:block min-w-0 max-w-full md:min-h-0 md:max-h-full overflow-auto z-50 bottom-0 left-1 right-1 rounded md:bottom-0 md:left-0 md:right-0 md:rounded-none absolute md:relative"
                style={{ gridArea: "footer" }}
            >
                <Footer transition:persist />
            </div>

            <div
                class="md:hidden min-w-0 max-w-full w-full h-16 fixed bottom-16 left-0 right-0 pb-1 px-1"
                style={{ gridArea: "footer" }}
                id="grid-area-footer-mobile"
            >
                <FooterMobile client:only="react" transition:persist />
            </div>
            <!-- Overlay Menu -->
            <div
                id="menu-overlay"
                class="fixed top-0 left-0 w-full h-full bg-black/50 z-40 opacity-0 pointer-events-none transition-all duration-300"
            >
            </div>
        </main>
        <LoadingIndicator />
    </body>
</html>

<style>
    main {
        grid-template-areas:
            "main"
            "nav";
    }

    @media (min-width: 768px) {
        main {
            grid-template-areas:
                "nav header"
                "nav main"
                "footer footer";
        }
    }
</style>
